@ 상속
자바에서 상속이란 자식 클래스가 부모 클래스의 멤버를 물려받는 것이다. 자식이 특정 부모를 선택해서 그 부모로부터 물려받는다.
상속 대상은 부모의 필드와 메소드이다. 생성자는 상속 대상이 아니다.
부모 클래스에서 물려받은 필드와 메서드는 자식 클래스에서 만들지 않아도 바로 사용할 수 있다.

부모 클래스를 재사용해 자식 클래스르 빨리 개발할 수 있는 효과가 있다. 
또한 반복된 코드 중복을 줄이고 유지보수의 편리성을 제공한다. 자식 클래스의 필드와 메서드 값을 수정하려면 다 수정했어야 했는데 부모에게 상속받은건 부모를 수정하면 자식도 다 수정이 되어 편리하다. 
마지막으로 객체 다형성 구현이 가능하다.
A a = new B();
A a1 = new C(); 이렇게 부모 타입에 자식을 담을 수 있다. 같은 타입을 담았을 때 다른 결과가 나온다. 이를 다형성이라 한다.

상속은 다 되는건 아니고 제한이 있는데 
부모 클래스의 private 필드와 메소드, 부모 클래스가 다른 패키지에 있는 경우, default 필드와 메소드를 제외한다.

@ 클래스 상속 (extends)
특정 부모에게 상속받을 때 필요한 키워드이다.
public class B extends A => A클래스를 확장할거야 = A클래스를 상속받을거야.
이렇게 되면 B클래스에 A클래스를 찾아갈 수 있는 주소가 생긴다.
자바는 단일 상속이다. 부모 클래스를 두개 이상 가질 수 없다.
또한 부모는 자식의 필드와 메소드를 사용할 수 없다. (호출할 수 없다. 하지만 메모리에 있긴 하다.)

@ 부모 생성자 호출(super)
자식 객체를 생성하면 부모 객체도 생성된다.
자식 객체를 생성할 때는 부모 객체부터 생성하고 자식 객체가 생성된다.
public CellPhone() {
}
public DmbCellPhone() {
   super();
}
자식생성자가 부모생성자를 호출했기 떄문에 부모가 먼저 만들어지고 super 다음 실행문이 끝나야 이제 자식 객체가 생성된다.
부모의 매개변수는 기본적으로 없다. 그래서 super에도 매개변수가 들어가지 않는다. -둘다 일치해야 객체가 만들어진다.
만약 부모에 매개변수가 있다면 super에도 동일하게 매개변수를 넣어줘야한다.
매개변수는 동일한 타입, 개수, 순서여야 한다. (무조건 동일해야 부모가 호출됨)
super은 반드시 자식 생성자의 첫 줄에 위치해야한다.

@ 메소드 재정의(Override)
오버라이드는 부모 클래스에서 상속 받은 메소드를 수정해 자식 클래스에서 재정의하는 것이다.  /부모 것이 잘 맞으면 그냥 쓰면 되는데 이건 뭐가 안 맞아서 바꾸는 것임. (재정의)
즉, 내 환경에 맞게끔 따로 쓴 것이다. 이때 메서드를 호출하면 부모의 것이 호출되는 것이 아니라 내 것 (자식)이 호출된다. 

오버라이드 할 때 부모클래스의 메소드와 동일한 시그니처를 가져야한다. 하나라도 달라지면(오타라도 나면) 자바는 그것을 부모를 오버라이드 한 게 아니라 새로운 자식 메소드가 생긴 것으로 간주한다.
또한 접근 제한을 더 강하게 오버라이딩 할 수 없다.
public을 default나 private로 수정할 수는 없지만 반대로 default는 public으로 수정 가능하다. 즉, 더 약하게는 가능한 것이다.
마지막으로 새로운 예외는 불가하다. -부모에게 없는 예외를 새로 붙여줄 수 없다.
